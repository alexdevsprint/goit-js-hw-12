{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '49321227-55ab2a796e9f996e0637ef132';\n\nasync function getData(searchName, page = 1) {\n  const response = await axios.get('https://pixabay.com/api/', {\n    params: {\n      key: API_KEY,\n      q: searchName,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n      page: page,\n      per_page: 15,\n    },\n  });\n  return response.data;\n}\n\nexport default getData;\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');  \n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nexport function renderPage(data) { \n\n  const galleryMarkup = data.hits\n    .map(\n      ({\n        largeImageURL,\n        webformatURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `\n  <li class=\"gallery-item\">\n  <a class=\"gallery-link\" href=\"${largeImageURL}\">\n    <img\n      class=\"gallery-image\"\n      src=\"${webformatURL}\"     \n      alt=\"${tags}\"\n    />\n  </a>\n  <ul class=\"gallery-info\">\n            <li class=\"gallery-info-item\">\n              <span class=\"gallery-info-title\">Likes</span> \n              <span class=\"gallery-info-value\">${likes}</span>\n            </li>\n            <li class=\"gallery-info-item\">\n              <span class=\"gallery-info-title\">Views</span> \n              <span class=\"gallery-info-value\">${views}</span>\n            </li>\n            <li class=\"gallery-info-item\">\n              <span class=\"gallery-info-title\">Comments</span> \n              <span class=\"gallery-info-value\">${comments}</span>\n            </li>\n            <li class=\"gallery-info-item\">\n              <span class=\"gallery-info-title\">Downloads</span> \n              <span class=\"gallery-info-value\">${downloads}</span>\n            </li>\n  </ul>\n</li>\n  `\n    )\n    .join('');\n\n  gallery.insertAdjacentHTML('beforeend', galleryMarkup);\n  \n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport getData from './js/pixabay-api';\nimport { renderPage, clearGallery } from './js/render-functions';\n\nconst form = document.querySelector('.form');\nconst showLoader = document.querySelector('.loader');\nconst loadPage = document.querySelector('button[type=\"button\"]');\n\nform.addEventListener('submit', handlerForm);\nloadPage.addEventListener('click', handlerLoadPage);\nlet searchName = '';\nlet page = 1;\n\nfunction handlerForm(event) {\n  event.preventDefault();\n  searchName = form.elements['search-text'].value.trim();\n  clearGallery();\n  findImage();\n  form.reset();\n}\n\nfunction handlerLoadPage() {\n  console.log(page);\n  page += 1;\n  findImage();\n}\n\nasync function findImage() {\n  if (searchName === '') {\n    iziToast.error({\n      title: 'Error',\n      message: 'You should enter text to search!',\n    });\n  } else {\n    showLoader.classList.remove('hidden');\n\n    try {\n      const data = await getData(searchName, page);\n\n      if (data.hits.length === 0) {\n        iziToast.error({\n          title: 'Error',\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n        });\n      } else {\n        renderPage(data);\n      }\n    } catch (error) {\n      console.log('Помилка в doStuff:', error);\n    }\n\n    showLoader.classList.add('hidden');\n  }\n}\n"],"names":["API_KEY","getData","searchName","page","axios","gallery","lightbox","SimpleLightbox","renderPage","data","galleryMarkup","largeImageURL","webformatURL","tags","likes","views","comments","downloads","clearGallery","form","showLoader","loadPage","handlerForm","handlerLoadPage","event","findImage","iziToast","error"],"mappings":"owBACA,MAAMA,EAAU,qCAEhB,eAAeC,EAAQC,EAAYC,EAAO,EAAG,CAY3C,OAXiB,MAAMC,EAAM,IAAI,2BAA4B,CAC3D,OAAQ,CACN,IAAKJ,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMC,EACN,SAAU,EACX,CACL,CAAG,GACe,IAClB,CCbA,MAAME,EAAU,SAAS,cAAc,UAAU,EAEjD,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAChB,CAAC,EAEM,SAASC,EAAWC,EAAM,CAE/B,MAAMC,EAAgBD,EAAK,KACxB,IACC,CAAC,CACC,cAAAE,EACA,aAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA;AAAA,kCAE0BN,CAAa;AAAA;AAAA;AAAA,aAGlCC,CAAY;AAAA,aACZC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAMgCC,CAAK;AAAA;AAAA;AAAA;AAAA,iDAILC,CAAK;AAAA;AAAA;AAAA;AAAA,iDAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,iDAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,GAKrD,EACA,KAAK,EAAE,EAEVZ,EAAQ,mBAAmB,YAAaK,CAAa,EAErDJ,EAAS,QAAO,CAClB,CAEO,SAASY,GAAe,CAC7Bb,EAAQ,UAAY,EACtB,CCxDA,MAAMc,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAa,SAAS,cAAc,SAAS,EAC7CC,EAAW,SAAS,cAAc,uBAAuB,EAE/DF,EAAK,iBAAiB,SAAUG,CAAW,EAC3CD,EAAS,iBAAiB,QAASE,CAAe,EAClD,IAAIrB,EAAa,GACbC,EAAO,EAEX,SAASmB,EAAYE,EAAO,CAC1BA,EAAM,eAAc,EACpBtB,EAAaiB,EAAK,SAAS,aAAa,EAAE,MAAM,OAChDD,IACAO,IACAN,EAAK,MAAK,CACZ,CAEA,SAASI,GAAkB,CACzB,QAAQ,IAAIpB,CAAI,EAChBA,GAAQ,EACRsB,GACF,CAEA,eAAeA,GAAY,CACzB,GAAIvB,IAAe,GACjBwB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,kCACf,CAAK,MACI,CACLN,EAAW,UAAU,OAAO,QAAQ,EAEpC,GAAI,CACF,MAAMX,EAAO,MAAMR,EAAQC,EAAYC,CAAI,EAEvCM,EAAK,KAAK,SAAW,EACvBiB,EAAS,MAAM,CACb,MAAO,QACP,QACE,0EACZ,CAAS,EAEDlB,EAAWC,CAAI,CAElB,OAAQkB,EAAO,CACd,QAAQ,IAAI,qBAAsBA,CAAK,CACxC,CAEDP,EAAW,UAAU,IAAI,QAAQ,CAClC,CACH"}